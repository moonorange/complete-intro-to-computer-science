{"data":{"site":{"siteMetadata":{"title":"Complete Intro to Computer Science","subtitle":"Data Structures and Algorithms","description":"Come learn the basics to computer science with Brian Holt","keywords":["computer science","complete intro","sorts","algorithms","Brian Holt","javascript","node.js"]}},"allMarkdownRemark":{"edges":[{"node":{"id":"f1dad5f2-fda5-5e2b-b8cc-e405bce69246","frontmatter":{"order":"10A","path":"/bloom-filters","title":"Bloom Filters","section":"Other Data Structures","description":"","icon":"seedling"}}},{"node":{"id":"fc85b907-8abb-55fe-a789-21793de6dce5","frontmatter":{"order":"11A","path":"/wrap-up","title":"Wrap Up","section":"Conclusion","description":"","icon":"flag-checkered"}}},{"node":{"id":"e2d65adf-eaf2-5a1b-b7de-b32d5838a58c","frontmatter":{"order":"1A","path":"/intro","title":"Introduction","section":"Welcome","description":"Brian introduces to himself, the course, and what you can expect to learn in the next few hours","icon":"info-circle"}}},{"node":{"id":"e6829f85-6b9c-56f6-89a6-c4558d4bcf0a","frontmatter":{"order":"1B","path":"/exercises","title":"The Exercises","section":"Welcome","description":"Brian teaches how to do access the exercises for the workshop.","icon":null}}},{"node":{"id":"b1ab1172-c9d9-5cfb-a0f7-60f8ce602127","frontmatter":{"order":"2A","path":"/big-o","title":"Big O","section":"Algorithm Analysis","description":"Brian goes over how to measure how efficient an algorithm and the tools we have to measure it","icon":"flask"}}},{"node":{"id":"a15273fe-c7df-51ed-aa9c-daa3201c2e24","frontmatter":{"order":"2B","path":"/spatial-complexity","title":"Spatial Complexity","section":"Algorithm Analysis","description":"Brian talks about Big O as it's applied to how much space something needs","icon":null}}},{"node":{"id":"a6c0c9d0-b0b4-5ba2-8ac5-1e7ac07427be","frontmatter":{"order":"2C","path":"/trade-offs","title":"Trade Offs","section":"Algorithm Analysis","description":"Brian goes over why we use Big O and the art of making trade offs","icon":null}}},{"node":{"id":"55a654c5-1ff6-5ca1-aea5-c6ee35463907","frontmatter":{"order":"3A","path":"/bubble-sort","title":"Bubble Sort","section":"Iterative Sorts","description":"Starting from basics, Brian teaches how to sort items in a list using the classic simple sorting algorithm, the bubble sort.","icon":"redo"}}},{"node":{"id":"e62378a3-6105-5673-97e4-08d60d94ea5c","frontmatter":{"order":"3B","path":"/insertion-sort","title":"Insertion Sort","section":"Iterative Sorts","description":"A more useful tool, insertion sort is a tool that developers will occasionally use. Brian goes over why that is and how to do it","icon":null}}},{"node":{"id":"613c5da6-1e95-5613-9540-5ffdd15b22c5","frontmatter":{"order":"4A","path":"/recursion","title":"Recursion","section":"Recursive Sorts","description":"Brian defines recursion as something that recurses. In this section Brian teaches what recursion is and some places you might use it.","icon":"sitemap"}}},{"node":{"id":"32672cc4-6670-5735-ba9f-d43a761f51c5","frontmatter":{"order":"4B","path":"/merge-sort","title":"Merge Sort","section":"Recursive Sorts","description":"One of the most versatile and useful sorts, merge sorts has wide applications due to its stabilitiy and reliability for sorting.","icon":null}}},{"node":{"id":"0c86a332-5d59-57b5-ac86-a6fea5206174","frontmatter":{"order":"4C","path":"/quick-sort","title":"Quick Sort","section":"Recursive Sorts","description":"A sort that has a better best case than merge sort, quick sort is frequently used as well. Brian teaches you all you need to know to add this to your algorithm toolbox.","icon":null}}},{"node":{"id":"8a2891be-bd00-5230-8ecb-6905e90281a0","frontmatter":{"order":"5A","path":"/radix-sort","title":"Radix Sort","section":"Non-Comparison Sorts","description":"Brian introduces another way of sorting that doesn't involve direct comparisons: radix sorting.","icon":"sort-amount-up-alt"}}},{"node":{"id":"8b8becb0-22e7-50e3-8dc0-1355254a6185","frontmatter":{"order":"6A","path":"/binary-search","title":"Binary Search","section":"Binary Search","description":"Sometimes you don't need to sort the whole array, you just need to find one element. Brian introduces one of the most effective ways of finding an element in array: binary search","icon":"search"}}},{"node":{"id":"f90dc8d5-8b51-512c-827c-6cc156d817ec","frontmatter":{"order":"7A","path":"/arraylist","title":"ArrayList","section":"Lists","description":"","icon":"list-alt"}}},{"node":{"id":"d725b33b-6a16-51d0-afc8-b3afe9276f49","frontmatter":{"order":"7B","path":"/linkedlist","title":"LinkedList","section":"Lists","description":"","icon":null}}},{"node":{"id":"2531cf1d-c8fd-5edf-a310-95d998072cee","frontmatter":{"order":"8A","path":"/binary-search-tree","title":"Binary Search Tree","section":"Trees","description":"","icon":"tree"}}},{"node":{"id":"603ef587-8b2e-528c-b6a1-e2a7deb3800e","frontmatter":{"order":"8B","path":"/avl-tree","title":"AVL Tree","section":"Trees","description":"","icon":null}}},{"node":{"id":"3ff07f2d-014e-5c6a-9d96-7ca00e010011","frontmatter":{"order":"8C","path":"/depth-first-tree-traversals","title":"Depth-First Tree Traversals","section":"Trees","description":"","icon":null}}},{"node":{"id":"136ec609-ce22-5b9f-9def-21ec44ae4da6","frontmatter":{"order":"8D","path":"/breadth-first-tree-traversals","title":"Breadth-First Tree Traversals","section":"Trees","description":"","icon":null}}},{"node":{"id":"e74e6ac2-4392-524b-94ea-1bcfcabd4b5a","frontmatter":{"order":"8E","path":"/heap-sort","title":"Heap Sort","section":"Trees","description":"","icon":null}}},{"node":{"id":"25eefb3a-955c-5422-9e46-9e93b13092a5","frontmatter":{"order":"9A","path":"/graphs","title":"Graphs","section":"Applying Tree Algorithms","description":"","icon":"map-signs"}}},{"node":{"id":"ceb43009-b0be-56fc-a386-a245d9cd2a3a","frontmatter":{"order":"9B","path":"/pathfinding","title":"Pathfinding","section":"Applying Tree Algorithms","description":"","icon":null}}},{"node":{"id":"69772a6c-c6a3-5377-99c9-0fa0ae6f231e","frontmatter":{"order":"9C","path":"/tries","title":"Tries","section":"Applying Tree Algorithms","description":"","icon":null}}}]}}}